#!/usr/bin/env bash
SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

if [ "$HELP" == "true" ]; then
cat <<EOF

NAME
   $EXECUTABLE - Display Hazelcast  member cluster IPs

SYNOPSIS
   $EXECUTABLE wan1|wan2 [-?]

DESCRIPTION
   Displays Hazelcast  member cluster IPs. 

OPTIONS
   wan1|wan2
             This option is required. 'wan1' displays Hazelcast in the '$PROJECT_WAN1' project and 
             'wan2' displays Hazelcast in the '$PROJECT_WAN2' project.

EOF
exit
fi

WAN=$1
if [ "$WAN" != "wan1" ] && [ "$WAN" != "wan2" ]; then
   echo >&2 "ERROR: Invalid input: [$WAN]. Please enter wan1 or wan2."
   exit 1
fi

if [ "$WAN" == "wan1" ]; then
   NAMESPACE=$PROJECT_WAN1
else
   NAMESPACE=$PROJECT_WAN2
fi

echo ""
echo "Project: $NAMESPACE"
echo "    Arg: $WAN"
# Hazelcast service DNS
SERVICE_DNS="hz-hazelcast-enterprise.${NAMESPACE}.svc.cluster.local"

POD_LIST=$(oc get pods --namespace=$NAMESPACE -o wide | grep hz-hazelcast-enterprise- | grep -v mancenter | awk '{ print $6 }')

# Determine Hazelcast member IP addresses
echo ""
echo "Hazelcast Cluster IP Addresses Determined:"
echo ""
MEMBER_ADDRESSES=""
let MEMBER_COUNT=0
for i in $POD_LIST; do
   if [ "$i" == "<none>" ]; then
      continue;
   fi
   let MEMBER_COUNT=MEMBER_COUNT+1
   ADDRESS="$i:5701"
   if [ "$MEMBER_ADDRESSES" == "" ]; then
      MEMBER_ADDRESSES="\t\t\t<address>${ADDRESS}<\/address>"
   else
      MEMBER_ADDRESSES="${MEMBER_ADDRESSES}\n\t\t\t<address>${ADDRESS}<\/address>"
   fi
   echo "       ${ADDRESS}"
done
echo ""
echo "Service DNS: ${SERVICE_DNS}"
echo ""
